public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("Input size array!!!");
		int size = sc.nextInt();
		Random r = new Random();
		int[][] array = new int[size][size];
		for (int i = 0; i < size; i++) {
			for (int j = 0; j < size; j++) {
				array[i][j] = r.nextInt(size);
			}
		}
		for (int[] i : array) {
			System.out.println(Arrays.toString(i));
		}
		System.out.println();
		MultiStreamArray msa = new MultiStreamArray(0, array);
		msa.multiSumArray();
		System.out.println();
		OneStreamArray osa = new OneStreamArray(array);
		osa.SumArray();
	}
}

public class SumElementsArray implements Runnable {
	private int i;
	private int[][] array;
	private Thread thr;
	private int sum = 0;

	public SumElementsArray(int i, int[][] array) {
		super();
		this.i = i;
		this.array = array;
	}

	public SumElementsArray() {
		super();
	}

	public int getSum() {
		return sum;
	}

	@Override
	public void run() {
		Thread thr = Thread.currentThread();
		for (int j = 0; j < array.length; j++) {
			sum += array[i][j];
		}
		System.out.println(thr.getName() + "=>" + sum + ";");
	}
}

public class MultiStreamArray {
	private int i;
	private int[][] array;

	public MultiStreamArray(int i, int[][] array) {
		super();
		this.i = i;
		this.array = array;
	}

	public MultiStreamArray() {
		super();
	}

	public void multiSumArray() {
		long timeOne = System.currentTimeMillis();
		int allSum = 0;
		SumElementsArray[] threadArray = new SumElementsArray[array.length];
		Thread[] thr = new Thread[array.length];
		for (int i = 0; i < array.length; i++) {
			threadArray[i] = new SumElementsArray(i, array);
			thr[i] = new Thread(threadArray[i]);
			thr[i].start();
			try {
				thr[i].join();
			} catch (InterruptedException e) {
				System.out.println(e);
			}
		}
		for (int i = 0; i < array.length; i++) {
			allSum += threadArray[i].getSum();
		}
		System.out.println();
		System.out.println("MultiStreamSum-" + allSum + "; time-" + (System.currentTimeMillis() - timeOne) + ";");
	}
}

public class OneStreamArray {
	private int[][] array;

	public OneStreamArray(int[][] array) {
		super();
		this.array = array;
	}

	public OneStreamArray() {
		super();
	}

	public void SumArray() {
		long timeTwo = System.currentTimeMillis();
		int sum = 0;
		for (int i = 0; i < array.length; i++) {
			for (int j = 0; j < array[0].length; j++) {
				sum += array[i][j];
			}
		}
		System.out.println("OneStreamSum-" + sum + "; time-" + (System.currentTimeMillis() - timeTwo) + ".");
	}
}
