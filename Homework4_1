public class CopyFiles {

	public static void main(String[] args) throws IOException {
		MyFileFilter mFF = new MyFileFilter("doc");
		File folderInput = new File("D:\\INPUT");
		File[] fileList = folderInput.listFiles(mFF);
		for (File file : fileList) {
			System.out.println(file);
		}
		copyFilesDoc(fileList);
	}

	private static void copyFilesDoc(File[] fileList) throws IOException {
		Path folderOut = Paths.get("D:\\OUTPUT");
		int size = fileList.length;
		if (size == 0) {
			System.out.println("Warning this folder's empty!!!");
		}
		for (File file : fileList) {
			Files.copy(file.toPath(), folderOut.resolve(file.getName()));
		}
	}
}

public class MyFileFilter implements FileFilter {
	private String[] arr;

	public MyFileFilter(String... arr) {
		super();
		this.arr = arr;
	}

	public MyFileFilter() {
		super();
	}

	private boolean check(String ext) {
		for (String stringExt : arr) {
			if (stringExt.equals(ext)) {
				return true;
			}
		}
		return false;
	}

	@Override
	public boolean accept(File pathname) {
		int pointerIndex = pathname.getName().lastIndexOf(".");
		if (pointerIndex == -1) {
			return false;
		}
		String ext = pathname.getName().substring(pointerIndex + 1);
		return check(ext);
	}

}
